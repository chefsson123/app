{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [fileResult, setFileResult] = useState();\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  const sfHandler = e => {\n    setIsFileUploaded(true);\n    console.log(fileResult);\n  }; // Callback from a <input type=\"file\" onchange=\"onChange(event)\">\n\n\n  function onChange(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      console.log(e.target.result);\n      const transformed = e.target.result.trim().split(\"\\r\\n\");\n      const whatever = transformed.map(employee => {\n        return employee.replaceAll(\"-\", \",\").split(\",\");\n      });\n      const doit1 = whatever.map(single => {\n        return single.map(Number);\n      });\n      const doit = doit1.map(single => {\n        return {\n          employeeID: single[0],\n          projectID: single[1],\n          daysWorked: Math.round(Math.abs((new Date(single[2], single[3], single[4]) - new Date(single[5], single[6], single[7])) / oneDay))\n        };\n      });\n      doit.sort(function (a, b) {\n        return b.daysWorked - a.daysWorked;\n      });\n      var result = doit.reduce(function (r, a) {\n        r[a.projectID] = r[a.projectID] || [];\n        r[a.projectID].push(a);\n        return r;\n      }, []);\n      var updated = result.map(item => {\n        return {\n          employeeOne: item[0].employeeID,\n          employeeTwo: item[1].employeeID,\n          daysWorkedTogether: item[0].daysWorked + item[1].daysWorked\n        };\n      });\n      updated.sort(function (a, b) {\n        return b.daysWorkedTogether - a.daysWorkedTogether;\n      });\n      console.log(updated);\n      /*doit.sort(function (a, b) {   \r\n        return b.projectID - a.projectID;\r\n      });*/\n\n      setFileResult(doit);\n    };\n\n    reader.readAsText(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      className: \"custom-file-upload\",\n      children: \"Upload your file here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sfHandler,\n      children: \"dasdsadsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(DataGrid, {\n      employeeStats: fileResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"yyEnCAUpBtrUvsLV5EW+vikkSIE=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["useState","DataGrid","Input","fileResult","setFileResult","isFileUploaded","setIsFileUploaded","oneDay","sfHandler","e","console","log","onChange","event","file","target","files","reader","FileReader","onload","result","transformed","trim","split","whatever","map","employee","replaceAll","doit1","single","Number","doit","employeeID","projectID","daysWorked","Math","round","abs","Date","sort","a","b","reduce","r","push","updated","item","employeeOne","employeeTwo","daysWorkedTogether","readAsText"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = () => {\r\n  const [fileResult, setFileResult] = useState();\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n\r\n  const sfHandler = (e) => {\r\n    setIsFileUploaded(true);\r\n    console.log(fileResult);\r\n  };\r\n\r\n  // Callback from a <input type=\"file\" onchange=\"onChange(event)\">\r\n  function onChange(event) {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.onload = function (e) {\r\n      // The file's text will be printed here\r\n      console.log(e.target.result);\r\n      const transformed = e.target.result.trim().split(\"\\r\\n\");\r\n      const whatever = transformed.map((employee) => {\r\n        return employee.replaceAll(\"-\", \",\").split(\",\");\r\n      });\r\n\r\n\r\n      const doit1 = whatever.map(single => {\r\n        return single.map(Number)\r\n      })\r\n     const doit = doit1.map((single) => {\r\n       \r\n        return {\r\n          employeeID: single[0],\r\n          projectID: single[1],\r\n          daysWorked: Math.round(\r\n            Math.abs(\r\n              (new Date(single[2], single[3], single[4]) -\r\n                new Date(single[5], single[6], single[7])) /\r\n                oneDay\r\n            )\r\n          ),\r\n        };\r\n      });\r\n\r\n      doit.sort(function (a, b) {   \r\n        return b.daysWorked - a.daysWorked;\r\n    });\r\n\r\n     var result = doit.reduce(function (r, a) {\r\n        r[a.projectID] = r[a.projectID] || []\r\n        r[a.projectID].push(a)\r\n        \r\n        return r;\r\n    }, []);\r\n\r\n    var updated = result.map(item => {\r\n      return {\r\n        employeeOne: item[0].employeeID,\r\n        employeeTwo: item[1].employeeID,\r\n        daysWorkedTogether: item[0].daysWorked + item[1].daysWorked\r\n      }\r\n    })\r\n\r\n    updated.sort(function (a, b) {   \r\n      return b.daysWorkedTogether - a.daysWorkedTogether;\r\n  });\r\n\r\nconsole.log(updated);\r\n\r\n\r\n      \r\n\r\n\r\n      /*doit.sort(function (a, b) {   \r\n        return b.projectID - a.projectID;\r\n    });*/\r\n      \r\n      \r\n      setFileResult(doit);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n        Upload your file here\r\n      </label>\r\n      <input type=\"file\" id=\"fileInput\" onChange={onChange} />\r\n      <button onClick={sfHandler}>dasdsadsa</button>\r\n      {isFileUploaded && <DataGrid employeeStats={fileResult} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}