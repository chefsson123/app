{"ast":null,"code":"import { createStore } from 'redux';\n\nconst dataGridReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'do') {\n    return state;\n  } else {\n    return state;\n  }\n};\n\nconst store = createStore(dataGridReducer);\n\nfunction onChange(event) {\n  var file = event.target.files[0];\n  var reader = new FileReader();\n\n  reader.onload = function (e) {\n    // The file's text will be printed here\n    console.log(e.target.result);\n    const transformed = e.target.result.split(\"\\r\\n\");\n    const whatever = transformed.map(employee => {\n      return employee.trim().split(\",\");\n    });\n    const doit = whatever.map(single => {\n      return {\n        employeeID: single[0],\n        projectID: single[1],\n        dateFrom: single[2],\n        dateTo: single[3]\n      };\n    });\n    setFileResult(doit);\n  };\n\n  console.log(fileResult);\n  reader.readAsText(file);\n}\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/store/store.js"],"names":["createStore","dataGridReducer","state","counter","action","type","store","onChange","event","file","target","files","reader","FileReader","onload","e","console","log","result","transformed","split","whatever","map","employee","trim","doit","single","employeeID","projectID","dateFrom","dateTo","setFileResult","fileResult","readAsText"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAIA,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzB;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAyB;AAAA,MAAXC,MAAW;;AAEtD,MAAGA,MAAM,CAACC,IAAP,KAAgB,IAAnB,EAAyB;AACrB,WAAOH,KAAP;AACH,GAFD,MAGK;AACD,WAAOA,KAAP;AACH;AACJ,CARD;;AASA,MAAMI,KAAK,GAAGN,WAAW,CAACC,eAAD,CAAzB;;AACA,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACL,MAAF,CAASQ,MAArB;AACA,UAAMC,WAAW,GAAGJ,CAAC,CAACL,MAAF,CAASQ,MAAT,CAAgBE,KAAhB,CAAsB,MAAtB,CAApB;AACA,UAAMC,QAAQ,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,QAAD,IAAc;AAC7C,aAAOA,QAAQ,CAACC,IAAT,GAAgBJ,KAAhB,CAAsB,GAAtB,CAAP;AACD,KAFgB,CAAjB;AAIA,UAAMK,IAAI,GAAGJ,QAAQ,CAACC,GAAT,CAAcI,MAAD,IAAY;AACpC,aAAO;AACLC,QAAAA,UAAU,EAAED,MAAM,CAAC,CAAD,CADb;AAELE,QAAAA,SAAS,EAAEF,MAAM,CAAC,CAAD,CAFZ;AAGLG,QAAAA,QAAQ,EAAEH,MAAM,CAAC,CAAD,CAHX;AAILI,QAAAA,MAAM,EAAEJ,MAAM,CAAC,CAAD;AAJT,OAAP;AAMD,KAPY,CAAb;AASAK,IAAAA,aAAa,CAACN,IAAD,CAAb;AACD,GAlBD;;AAmBAT,EAAAA,OAAO,CAACC,GAAR,CAAYe,UAAZ;AACApB,EAAAA,MAAM,CAACqB,UAAP,CAAkBxB,IAAlB;AACD;;AAIH,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux'\r\n\r\n\r\n\r\nconst dataGridReducer = (state = {counter: 0}, action) => {\r\n\r\n    if(action.type === 'do') {\r\n        return state\r\n    }\r\n    else {\r\n        return state\r\n    }\r\n}\r\nconst store = createStore(dataGridReducer)\r\nfunction onChange(event) {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.onload = function (e) {\r\n      // The file's text will be printed here\r\n      console.log(e.target.result);\r\n      const transformed = e.target.result.split(\"\\r\\n\");\r\n      const whatever = transformed.map((employee) => {\r\n        return employee.trim().split(\",\");\r\n      });\r\n\r\n      const doit = whatever.map((single) => {\r\n        return {\r\n          employeeID: single[0],\r\n          projectID: single[1],\r\n          dateFrom: single[2],\r\n          dateTo: single[3],\r\n        };\r\n      });\r\n\r\n      setFileResult(doit);\r\n    };\r\n    console.log(fileResult);\r\n    reader.readAsText(file);\r\n  }\r\n\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}