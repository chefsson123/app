{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [fileResult, setFileResult] = useState();\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const days = [];\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  var today = new Date();\n\n  const sfHandler = e => {\n    setIsFileUploaded(true);\n    console.log(fileResult);\n  }; // Callback from a <input type=\"file\" onchange=\"onChange(event)\">\n\n\n  function onChange(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      console.log(e.target.result);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      className: \"custom-file-upload\",\n      children: \"Upload your file here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sfHandler,\n      children: \"dasdsadsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(DataGrid, {\n      employeeStats: fileResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"yyEnCAUpBtrUvsLV5EW+vikkSIE=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["useState","DataGrid","Input","fileResult","setFileResult","isFileUploaded","setIsFileUploaded","days","oneDay","today","Date","sfHandler","e","console","log","onChange","event","file","target","files","reader","FileReader","onload","result"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,EAA5C;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AACF,QAAMO,IAAI,GAAG,EAAb;AACE,QAAMC,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CAJkB,CAIkB;;AACpC,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AACA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACD,GAHD,CANkB,CAWlB;;;AACA,WAASY,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUV,CAAV,EAAa;AAC3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACM,MAAF,CAASK,MAArB;AACD,KAHD;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGN,cAAc,iBAAI,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhCD;;GAAMD,K;;KAAAA,K;AAkCN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = () => {\r\n  const [fileResult, setFileResult] = useState();\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\nconst days = []\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  var today = new Date()\r\n  const sfHandler = (e) => {\r\n    setIsFileUploaded(true);\r\n    console.log(fileResult);\r\n  };\r\n\r\n  // Callback from a <input type=\"file\" onchange=\"onChange(event)\">\r\n  function onChange(event) {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.onload = function (e) {\r\n      // The file's text will be printed here\r\n      console.log(e.target.result);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n        Upload your file here\r\n      </label>\r\n      <input type=\"file\" id=\"fileInput\" onChange={onChange} />\r\n      <button onClick={sfHandler}>dasdsadsa</button>\r\n      {isFileUploaded && <DataGrid employeeStats={fileResult} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}