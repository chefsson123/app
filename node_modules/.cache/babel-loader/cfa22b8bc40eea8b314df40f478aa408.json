{"ast":null,"code":"const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\nvar today = new Date();\n\nconst useLoadFile = event => {\n  var file = event.target.files[0];\n  var reader = new FileReader();\n\n  reader.onload = function (e) {\n    /* split employees by row  */\n    const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\n    const employeesData = splitEmployees.map(employee => {\n      /* in case of NULL - get current date */\n      return employee.replaceAll(\"NULL\", today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()).split(\",\");\n    });\n    reader.readAsText(file);\n  };\n};\n\nexport default useLoadFile;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/hooks/use-loadFile.js"],"names":["oneDay","today","Date","useLoadFile","event","file","target","files","reader","FileReader","onload","e","splitEmployees","result","trim","split","employeesData","map","employee","replaceAll","getFullYear","getMonth","getDate","readAsText"],"mappings":"AAAA,MAAMA,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,C,CAAoC;;AACpC,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAG/B,MAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACQ,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACA,UAAMC,cAAc,GAAGD,CAAC,CAACL,MAAF,CAASO,MAAT,CAAgBC,IAAhB,GAAuBC,KAAvB,CAA6B,MAA7B,CAAvB;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,GAAf,CAAoBC,QAAD,IAAc;AACrD;AACA,aAAOA,QAAQ,CACZC,UADI,CAEH,MAFG,EAGHlB,KAAK,CAACmB,WAAN,KACE,GADF,IAEGnB,KAAK,CAACoB,QAAN,KAAmB,CAFtB,IAGE,GAHF,GAIEpB,KAAK,CAACqB,OAAN,EAPC,EASJP,KATI,CASE,GATF,CAAP;AAUD,KAZqB,CAAtB;AAgBVP,IAAAA,MAAM,CAACe,UAAP,CAAkBlB,IAAlB;AACC,GApBO;AAqBP,CA1BD;;AA2BA,eAAeF,WAAf","sourcesContent":["const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\nvar today = new Date();\r\n\r\nconst useLoadFile = (event) => {\r\n\r\n\r\nvar file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n          /* split employees by row  */\r\n          const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\r\n          const employeesData = splitEmployees.map((employee) => {\r\n            /* in case of NULL - get current date */\r\n            return employee\r\n              .replaceAll(\r\n                \"NULL\",\r\n                today.getFullYear() +\r\n                  \"-\" +\r\n                  (today.getMonth() + 1) +\r\n                  \"-\" +\r\n                  today.getDate()\r\n              )\r\n              .split(\",\");\r\n          });\r\n          \r\n          \r\n\r\nreader.readAsText(file);\r\n}\r\n}\r\nexport default useLoadFile;"]},"metadata":{},"sourceType":"module"}