{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\";\nimport useLoadFile from \"../hooks/use-loadFile\";\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  function fetchData() {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n    var today = new Date();\n\n    function wtf(event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        /* split employees by row  */\n        const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\n        const employeesData = splitEmployees.map(employee => {\n          /* in case of NULL - get current date */\n          return employee.replaceAll(\"NULL\", today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()).split(\",\");\n        });\n        reader.readAsText(file);\n        console.log(employeesData);\n      };\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        onClick: fetchData,\n        children: \"Upload your file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["useLoadFile","DataGrid","Input","fetchData","oneDay","today","Date","wtf","event","file","target","files","reader","FileReader","onload","e","splitEmployees","result","trim","split","employeesData","map","employee","replaceAll","getFullYear","getMonth","getDate","readAsText","console","log"],"mappings":";AACA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAKA,MAAMC,KAAK,GAAG,MAAM;AACnB,WAASC,SAAT,GAAqB;AACpB,UAAMC,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CADoB,CACgB;;AACpC,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,aAASC,GAAT,CAAaC,KAAb,EAAoB;AACpB,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACA,cAAMC,cAAc,GAAGD,CAAC,CAACL,MAAF,CAASO,MAAT,CAAgBC,IAAhB,GAAuBC,KAAvB,CAA6B,MAA7B,CAAvB;AACA,cAAMC,aAAa,GAAGJ,cAAc,CAACK,GAAf,CAAoBC,QAAD,IAAc;AACrD;AACA,iBAAOA,QAAQ,CACZC,UADI,CAEH,MAFG,EAGHlB,KAAK,CAACmB,WAAN,KACE,GADF,IAEGnB,KAAK,CAACoB,QAAN,KAAmB,CAFtB,IAGE,GAHF,GAIEpB,KAAK,CAACqB,OAAN,EAPC,EASJP,KATI,CASE,GATF,CAAP;AAWD,SAbqB,CAAtB;AAcAP,QAAAA,MAAM,CAACe,UAAP,CAAkBlB,IAAlB;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACF,OAnBA;AAoBD;AAAC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,oBAAvC;AAA4D,QAAA,OAAO,EAAEjB,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCD;;KAAMD,K;AA4CN,eAAeA,KAAf","sourcesContent":["\r\nimport useLoadFile from \"../hooks/use-loadFile\";\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\n\r\n\r\n\r\n\r\nconst Input = () => {\r\n function fetchData() {\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  var today = new Date();\r\n\r\n  function wtf(event) {\r\n  var file = event.target.files[0];\r\n  var reader = new FileReader();\r\n  reader.onload = function (e) {\r\n    /* split employees by row  */\r\n    const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\r\n    const employeesData = splitEmployees.map((employee) => {\r\n      /* in case of NULL - get current date */\r\n      return employee\r\n        .replaceAll(\r\n          \"NULL\",\r\n          today.getFullYear() +\r\n            \"-\" +\r\n            (today.getMonth() + 1) +\r\n            \"-\" +\r\n            today.getDate()\r\n        )\r\n        .split(\",\");\r\n        \r\n    });\r\n    reader.readAsText(file);\r\n    console.log(employeesData)\r\n }\r\n}}\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <div className=\"label-container\">\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\" onClick={fetchData}>\r\n          Upload your file here\r\n        </label>\r\n      </div>\r\n      <input type=\"file\" id=\"fileInput\"/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}