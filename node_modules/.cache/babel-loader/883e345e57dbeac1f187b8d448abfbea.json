{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\DataGrid.js\";\nimport \"./DataGrid.css\";\nimport FinalData from \"./FinalData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataGrid = props => {\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  var today = new Date();\n  var todaysDate = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n  const employeesData = `{props.loadedFile}`.map(employee => {\n    return employee.replaceAll(\"NULL\", todaysDate).split(\",\");\n  });\n  employeesData.map(workDate => {\n    workDate[2] = new Date(workDate[2]).toISOString().substring(0, 10).replaceAll(\"-\", \", \");\n    workDate[3] = new Date(workDate[3]).toISOString().substring(0, 10).replaceAll(\"-\", \", \");\n    return workDate;\n  });\n  const employeeStats = employeesData.map(data => {\n    return {\n      employeeID: data[0].trim(),\n      projectID: data[1].trim(),\n      daysWorked: Math.round(Math.abs((new Date(data[2]) - new Date(data[3])) / oneDay))\n    };\n  });\n  employeeStats.sort(function (a, b) {\n    return b.daysWorked - a.daysWorked;\n  });\n  var sortedByDays = employeeStats.reduce(function (r, a) {\n    r[a.projectID] = r[a.projectID] || [];\n    r[a.projectID].push(a);\n    return r;\n  }, []);\n  employeeStats.sort(function (a, b) {\n    return b.projectID - a.projectID;\n  });\n  var summarizeDaysWorked = sortedByDays.map(item => {\n    return {\n      employeeOne: item[0].employeeID,\n      employeeTwo: item[1].employeeID,\n      daysWorkedTogether: item[0].daysWorked + item[1].daysWorked,\n      projectID: item[0].projectID\n    };\n  });\n  summarizeDaysWorked.sort(function (a, b) {\n    return b.daysWorkedTogether - a.daysWorkedTogether;\n  });\n\n  for (let i = 0; i < summarizeDaysWorked.length + 1; i++) {\n    summarizeDaysWorked.pop();\n  }\n  /*\r\n    \r\n    \r\n    \r\n    \r\n    \r\n  \r\n  \r\n    setFileResult(summarizeDaysWorked);\r\n  setIsFileUploaded(true);\r\n  \n  JSON.stringify(summarizeDaysWorked);\r\n  console.log(\r\n    \"Employee #\" +\r\n      summarizeDaysWorked[0].employeeOne +\r\n      \" and Employee #\" +\r\n      summarizeDaysWorked[0].employeeTwo +\r\n      \" have worked on project #\" +\r\n      summarizeDaysWorked[0].projectID +\r\n      \" for the highest number of days ( \" +\r\n      summarizeDaysWorked[0].daysWorkedTogether +\r\n      \" )\"\r\n  );\r\n  console.log(summarizeDaysWorked)\r\n  };\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datagrid-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Days worked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinalData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DataGrid;\nexport default DataGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/DataGrid.js"],"names":["FinalData","DataGrid","props","oneDay","today","Date","todaysDate","getFullYear","getMonth","getDate","employeesData","map","employee","replaceAll","split","workDate","toISOString","substring","employeeStats","data","employeeID","trim","projectID","daysWorked","Math","round","abs","sort","a","b","sortedByDays","reduce","r","push","summarizeDaysWorked","item","employeeOne","employeeTwo","daysWorkedTogether","i","length","pop"],"mappings":"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","sourcesContent":["import \"./DataGrid.css\";\r\nimport FinalData from \"./FinalData\";\r\n\r\nconst DataGrid = (props) => {\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  var today = new Date();\r\n  var todaysDate = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate()\r\n\r\nconst employeesData = `{props.loadedFile}`.map((employee) => {\r\n   \r\n  return employee\r\n    .replaceAll(\"NULL\", todaysDate).split(\",\");\r\n   \r\n});\r\n\r\nemployeesData.map((workDate) => {\r\n   \r\n  workDate[2] = new Date(workDate[2])\r\n    .toISOString()\r\n    .substring(0, 10)\r\n    .replaceAll(\"-\", \", \");\r\n  workDate[3] = new Date(workDate[3])\r\n    .toISOString()\r\n    .substring(0, 10)\r\n    .replaceAll(\"-\", \", \");\r\n  return workDate;\r\n}); \r\n\r\nconst employeeStats = employeesData.map((data) => {\r\n  return {\r\n    employeeID: data[0].trim(),\r\n    projectID: data[1].trim(),\r\n    daysWorked: Math.round(\r\n      Math.abs((new Date(data[2]) - new Date(data[3])) / oneDay)\r\n    ) \r\n  };\r\n});\r\n\r\nemployeeStats.sort(function (a, b) {\r\n  return b.daysWorked - a.daysWorked; \r\n});\r\nvar sortedByDays = employeeStats.reduce(function (r, a) {\r\n  r[\r\n     a.projectID\r\n   ] = r[a.projectID] || [];\r\n   r[a.projectID].push(a);\r\n\r\n   return r;\r\n }, []);\r\n employeeStats.sort(function (a, b) {\r\n  return b.projectID - a.projectID;\r\n});\r\n\r\nvar summarizeDaysWorked = sortedByDays.map((item) => {\r\n\r\n  return {\r\n    employeeOne: item[0].employeeID,\r\n    employeeTwo: item[1].employeeID,\r\n    daysWorkedTogether: item[0].daysWorked + item[1].daysWorked,\r\n    projectID: item[0].projectID,\r\n  };\r\n});\r\n\r\nsummarizeDaysWorked.sort(function (a, b) {\r\n  return (\r\n       b.daysWorkedTogether - a.daysWorkedTogether\r\n     );\r\n   });\r\n\r\n   for (let i = 0; i < summarizeDaysWorked.length + 1; i++) {\r\n   \r\n    summarizeDaysWorked.pop();\r\n    \r\n  }\r\n \r\n\r\n  /*\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n  \r\n  \r\n\r\n  setFileResult(summarizeDaysWorked);\r\n  setIsFileUploaded(true);\r\n \r\n  JSON.stringify(summarizeDaysWorked);\r\n  console.log(\r\n    \"Employee #\" +\r\n      summarizeDaysWorked[0].employeeOne +\r\n      \" and Employee #\" +\r\n      summarizeDaysWorked[0].employeeTwo +\r\n      \" have worked on project #\" +\r\n      summarizeDaysWorked[0].projectID +\r\n      \" for the highest number of days ( \" +\r\n      summarizeDaysWorked[0].daysWorkedTogether +\r\n      \" )\"\r\n  );\r\n  console.log(summarizeDaysWorked)\r\n};\r\n */\r\n  return (\r\n    <div className=\"datagrid-container\">\r\n      \r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>Employee ID #1</th>\r\n            <th>Employee ID #2</th>\r\n            <th>Project ID</th>\r\n            <th>Days worked</th>\r\n          </tr>\r\n          <FinalData />\r\n          \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataGrid;\r\n"]},"metadata":{},"sourceType":"module"}