{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  /*             Start Uploading          */\n  const [fileResult, setFileResult] = useState([]);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  var today = new Date();\n\n  function onStartUpload(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      /* split employees by row  */\n      const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\n      reader.readAsText(file);\n      setFileResult(splitEmployees);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: \"Upload your file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: onStartUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(DataGrid, {\n      loadedFile: fileResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"4Frkn/zQ9f719ufkpWVDBDgiVdo=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["DataGrid","useState","Input","fileResult","setFileResult","isFileUploaded","setIsFileUploaded","oneDay","today","Date","onStartUpload","event","file","target","files","reader","FileReader","onload","e","splitEmployees","result","trim","split","readAsText"],"mappings":";;;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMM,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CANkB,CAMkB;;AACpC,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAGE,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACA,YAAMC,cAAc,GAAGD,CAAC,CAACL,MAAF,CAASO,MAAT,CAAgBC,IAAhB,GAAuBC,KAAvB,CAA6B,MAA7B,CAAvB;AAEFP,MAAAA,MAAM,CAACQ,UAAP,CAAkBX,IAAlB;AACAR,MAAAA,aAAa,CAACe,cAAD,CAAb;AACD,KANC;AAOH;;AAGH,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAET;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF,EAOGL,cAAc,iBAAI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnCD;;GAAMD,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Input = () => {\r\n \r\n\r\n  /*             Start Uploading          */\r\n  const [fileResult, setFileResult] = useState([]);\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  var today = new Date();\r\n\r\n\r\n    function onStartUpload(event) {\r\n        var file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n          /* split employees by row  */\r\n          const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\r\n        \r\n        reader.readAsText(file);\r\n        setFileResult(splitEmployees)\r\n      }\r\n    }\r\n \r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <div className=\"label-container\">\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          Upload your file here\r\n        </label>\r\n      </div>\r\n      <input type=\"file\" id=\"fileInput\" onChange={onStartUpload} />\r\n      {isFileUploaded && <DataGrid loadedFile={fileResult}/>}\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}