{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport useEmployeeData from \"../hooks/use-EmployeeData\";\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  var today = new Date();\n  const wtf = useEmployeeData();\n\n  const loadFile = event => {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      /* split employees by row  */\n      const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\n      console.log(splitEmployees);\n    };\n\n    reader.readAsText(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: \"Upload your file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: loadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"YTdOZFNHi2Z4c9z7nlql6dfBBZE=\", false, function () {\n  return [useEmployeeData];\n});\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["useEmployeeData","DataGrid","Input","oneDay","today","Date","wtf","loadFile","event","file","target","files","reader","FileReader","onload","e","splitEmployees","result","trim","split","console","log","readAsText"],"mappings":";;;AACA,OAAOA,eAAP,MAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAMC,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CAFkB,CAEkB;;AACtC,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,GAAG,GAAGN,eAAe,EAA3B;;AAEA,QAAMO,QAAQ,GAAIC,KAAD,IAAW;AAG5B,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACQ,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3B;AACA,YAAMC,cAAc,GAAGD,CAAC,CAACL,MAAF,CAASO,MAAT,CAAgBC,IAAhB,GAAuBC,KAAvB,CAA6B,MAA7B,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACT,KAJO;;AAKRJ,IAAAA,MAAM,CAACU,UAAP,CAAkBb,IAAlB;AAGC,GAbD;;AAmBE,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAML,K;UAIMF,e;;;KAJNE,K;AAyCN,eAAeA,KAAf","sourcesContent":["\r\nimport useEmployeeData from \"../hooks/use-EmployeeData\";\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\n\r\n\r\n\r\nconst Input = () => {\r\n\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\nvar today = new Date();\r\nconst wtf = useEmployeeData()\r\n\r\nconst loadFile = (event) => {\r\n\r\n\r\nvar file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n          /* split employees by row  */\r\n          const splitEmployees = e.target.result.trim().split(\"\\r\\n\");\r\n          console.log(splitEmployees)\r\n}\r\nreader.readAsText(file);\r\n\r\n\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <div className=\"label-container\">\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          Upload your file here\r\n        </label>\r\n      </div>\r\n      <input type=\"file\" id=\"fileInput\" onChange={loadFile} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}