{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task\\\\app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DataGrid from \"./DataGrid\";\nimport \"./Input.css\";\nimport formatDateLogic from \"../helpers/formatDateLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [fileResult, setFileResult] = useState([]);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  var today = new Date();\n  /*             Start Uploading          */\n\n  function onStartUpload(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      formatDateLogic();\n      setFileResult(summarizeDaysWorked);\n      setIsFileUploaded(true);\n      JSON.stringify(summarizeDaysWorked);\n      console.log(\"Employee #\" + summarizeDaysWorked[0].employeeOne + \" and Employee #\" + summarizeDaysWorked[0].employeeTwo + \" have worked on project #\" + summarizeDaysWorked[0].projectID + \" for the highest number of days ( \" + summarizeDaysWorked[0].daysWorkedTogether + \" )\");\n    };\n\n    reader.readAsText(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: \"Upload your file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: onStartUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(DataGrid, {\n      employeeStats: fileResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"4Frkn/zQ9f719ufkpWVDBDgiVdo=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/task/app/src/components/Input.js"],"names":["useState","DataGrid","formatDateLogic","Input","fileResult","setFileResult","isFileUploaded","setIsFileUploaded","oneDay","today","Date","onStartUpload","event","file","target","files","reader","FileReader","onload","e","summarizeDaysWorked","JSON","stringify","console","log","employeeOne","employeeTwo","projectID","daysWorkedTogether","readAsText"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMQ,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CAHkB,CAGkB;;AACpC,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAEA;;AACA,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAEzBjB,MAAAA,eAAe;AAEjBG,MAAAA,aAAa,CAACe,mBAAD,CAAb;AACAb,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAc,MAAAA,IAAI,CAACC,SAAL,CAAeF,mBAAf;AACAG,MAAAA,OAAO,CAACC,GAAR,CACE,eACEJ,mBAAmB,CAAC,CAAD,CAAnB,CAAuBK,WADzB,GAEE,iBAFF,GAGEL,mBAAmB,CAAC,CAAD,CAAnB,CAAuBM,WAHzB,GAIE,2BAJF,GAKEN,mBAAmB,CAAC,CAAD,CAAnB,CAAuBO,SALzB,GAME,oCANF,GAOEP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBQ,kBAPzB,GAQE,IATJ;AAWD,KAlBD;;AAmBAZ,IAAAA,MAAM,CAACa,UAAP,CAAkBhB,IAAlB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF,EAOGL,cAAc,iBAAI,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAPrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3CD;;GAAMD,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport DataGrid from \"./DataGrid\";\r\nimport \"./Input.css\";\r\nimport formatDateLogic from \"../helpers/formatDateLogic\";\r\n\r\nconst Input = () => {\r\n  const [fileResult, setFileResult] = useState([]);\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n  var today = new Date();\r\n\r\n  /*             Start Uploading          */\r\n  function onStartUpload(event) {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (e) {\r\n\r\n        formatDateLogic()\r\n\r\n      setFileResult(summarizeDaysWorked);\r\n      setIsFileUploaded(true);\r\n      JSON.stringify(summarizeDaysWorked);\r\n      console.log(\r\n        \"Employee #\" +\r\n          summarizeDaysWorked[0].employeeOne +\r\n          \" and Employee #\" +\r\n          summarizeDaysWorked[0].employeeTwo +\r\n          \" have worked on project #\" +\r\n          summarizeDaysWorked[0].projectID +\r\n          \" for the highest number of days ( \" +\r\n          summarizeDaysWorked[0].daysWorkedTogether +\r\n          \" )\"\r\n      );\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <div className=\"label-container\">\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          Upload your file here\r\n        </label>\r\n      </div>\r\n      <input type=\"file\" id=\"fileInput\" onChange={onStartUpload} />\r\n      {isFileUploaded && <DataGrid employeeStats={fileResult} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}